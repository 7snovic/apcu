// $Id: config.w32 309203 2011-03-14 06:47:16Z pajoye $
// vim:ft=javascript

ARG_ENABLE('apcu', 'Whether to enable APCu support', 'no');
ARG_ENABLE('apcu-debug', 'Whether to enable APCu debugging', 'no');
ARG_ENABLE('apcu-bc', 'Whether APCu should provide APC compatibility module', 'yes');

if(PHP_APCU != 'no')
{
	var apc_sources = 	'apc.c apc_lock.c apc_windows_srwlock_kernel.c php_apc.c ' +
						'apc_cache.c ' +
						'apc_mmap.c ' +
						'apc_shm.c ' +
						'apc_sma.c ' +
						'apc_stack.c ' +
						'apc_signal.c ' +
						'apc_pool.c ' +
						'apc_iterator.c'; 

	if(PHP_APCU_DEBUG != 'no')
	{
		ADD_FLAG('CFLAGS_APC', '/D APC_DEBUG=1');
	}

	if (PHP_APCU_BC != 'no') 
	{
		MESSAGE("APCu: full APC compatibility is enabled");
		EXTENSION("apc", configure_module_dirname + "/bc/php_apc.c", PHP_APCU_SHARED, "/DZEND_ENABLE_STATIC_TSRMLS_CACHE=1");
		ADD_EXTENSION_DEP("apc", "apcu", true);
		ADD_SOURCES(
			configure_module_dirname + "/bc", 
			"php_apc.c", 
			"apcu");
	} else {
		WARNING("APCu: full APC compatibility is NOT enabled");
	}
	
	/* XXX srwlock kernel as most BC compatible for now */
	AC_DEFINE('APC_SRWLOCK_KERNEL', 1);
	AC_DEFINE('HAVE_APCU', 1);
	ADD_FLAG('CFLAGS_APC', '/D WIN32_ONLY_COMPILER=1');
	PHP_INSTALL_HEADERS("ext/apcu", "apc.h apc_api.h apc_cache_api.h apc_lock_api.h apc_pool_api.h apc_sma_api.h apc_serializer.h");

	EXTENSION('apcu', apc_sources, PHP_APCU_SHARED, "/DZEND_ENABLE_STATIC_TSRMLS_CACHE=1");
}

